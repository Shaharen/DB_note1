p. 93

select
from
where

=> from과 where 사이엔 다른게 올수 없다.
=> from where select 순으로 실행됨
=> where 절에는 조건식이 필수이며
	   컬럼     연산자  값     순으로 써야한다.
ex)  department_id      =    90

* where 절
1.  조건식을 작성해야한다
2.  값 사용시  문자 / 날짜 값은 반드시 '  ' 를 써서
   리터럴 문자임을 알려줄것
3.  값 사용시에는 table 에 저장된 data 형식 그대로 사용

연산자 같지않음 <> 보다 != 가 더 좋음

예제) 연봉이 120000 이상되는 사원들의 이름 및 연봉을 출력
단 이름은 NAME, 연봉은 Ann Salary 로 출력

select last_name as name , salary*12 "Ann Salary"
from employees
where salary*12 >= 120000

연관 예시)))
select last_name as name , salary*12 as annsal
from employees
where annsal >= 120000
=> where 이 먼저 실행되므로 에러
	즉 annsal 이 기존 테이블이 아니고 알리아스임

연관 예시2)))
select last_name as name
from employees
where salary*12 >= 120000
=> 실행은 됨 But 코드를 안보면 조건을 알 수 없음
=> 데이터 분석 어려움

----------------p. 99 ( 현업에서 가장 많이 씀 )-------------------------------


BETWEEN A AND B		두 값(A 와 B) 사이 ( A ~ B )
IN ( SET )			값 목록 중의 값과 일치
LIKE			문자 패턴 일치( 일부 값을 근거로 전체를 찾음 )
IS NULL			널 값


1. between ( 이상 이하값 )

=> 모든 데이터 타입에 사용할 수 있으나
	 숫자나 날짜에서 주로 사용됨

select last_name, salary
from employees
where salary between 2500 and 3500

2. in ( 똑같은 값을 찾을때 )

select employee_id, last_name, salary, manager_id
from employees
where manager_id IN ( 100, 101, 201)

3. like ( 일부만 알고 있을때 )

- % 는 문장 전체
- _ 한 개가 문자 하나를 의미

select first_name
from employees
where first_name like 'S%'

=> S% : 첫글자가 S로 시작하는 모든 단어를 찾아달라 ( 대소문자 구별함 ) 
=> %S : 마지막 글자가 S로 끝나는 단어
=> %S% : 중간에 S가 포함되는 단어 찾아달라

ex) select last_name, hire_date
from employees
where hire_date like '06%'

=> _o% : 두번쨰 글자가 o인 모든 단어를 찾아달라
=> a_b% : 첫번째 a 세번째 B인 모든 단어 찾아달라

ex) select last_name
from employees
where last_name like '_o%'

4. is null

select last_name, manager_id
from employees
where manager_id is null

select last_name, job_id, commission_pct
from employees
where commission_pct is null


p.105 논리 조건 -----------------------------------------------------------------

1. and
2. or
3. not


예제) 90번 부서에 근무하는 사원 중 급여가 5000 이상인 사원의 이름과 급여를 출력
			 < 조건 2개 >
select last_name, salary
from employees
where department_id = 90
and salary >= 5000


select employee_id, last_name, job_id, salary
from employees
where salary >= 10000
and job_id like '%MAN%'

select employee_id, last_name, job_id, salary
from employees
where salary >= 10000
or job_id like '%MAN%'

* not 의 위치
1. not between
2. not like
3. not in
4. is not null

예제) 부서번호가 90번이 아닌 모든 사원의 이름과 급여 출력
select last_name, salary
from employees
where department_id <>90 ( 또는 != 90 )
(= where not department_id = 90 ) -----------------> 가능은 하지만 성능 뚜레기


p. 109 우선순위

** and 와 or 가 같이 쓰이면  and 가 우선

select last_name, job_id, salary
from employees
where job_id = 'SA_REP'
or job_id = 'AD_PRES'
and salary > 15000

=> salary 가 15000 보다 큰 사원 중에서 job _ id 가 'SA_REP' 거나 'AD_PRES' 인 사원의
  이름과 직업명과 봉급 출력 -> 오답

=> salary 가 15000 보다 큰 사원 중 job_id 가 'AD_PRES' 인 사람을 찾고
   job_id 가'SA_REP' 인 사람 출력


select last_name, job_id, salary
from employees
where (job_id = 'SA_REP'
or job_id = 'AD_PRES')
and salary > 15000

==>> salary 가 15000 보다 큰 사원 중에서 job _ id 가 'SA_REP' 거나 'AD_PRES' 인 사원의
  이름과 직업명과 봉급 출력

p. 112 --------------------------------------------------------------------------

ORDER BY

- 정렬은 아스키코드값에 따라 정렬된다 
- 정렬시 null 값은 상단 ( 오름차순 ) 하단 ( 내림차순 ) 에 위치 ( 즉, null 아스키값 0 )

- ORDER BY 절 뒤에는 다른 절 못온다.
- 즉 제일 마지막에 위치하며 마지막에 시행된다.

ex)	select last_name, job_id, department_id, hire_date
	from employees
	order by hire_date

ex)	select last_name, job_id, department_id, hire_date
	from employees
	order by 3 ============> select list 에 표시된 3번째 컬럼으로
( 단  버그가 많으니 쓰지말것 )

ex)	select last_name, job_id, salary*12 "annsal"
	from employees
	order by annsal

	==>> 오류 발생 --> order by 뒤 annsal 이 대문자로 인식됨

	-> 개선
ex)	select last_name, job_id, salary*12 "annsal"
	from employees
	order by "annsal"


** 멀티플 정렬
ex)	select last_name, department_id, salary
	from employees
	order by department_id, salary desc
	=> de~_id 에서는 정렬되고 나서 각 그룹안에서 다시 정렬



select distinct * column alias

from

where

order by

예제 ) 연봉이 120000 이상되는 사원들의 이름과 연봉 출력
select last_name, salary*12
from employees
where salary*12 >= 120000

예제 ) 사원번호가 176인 사원의 이름과 부서 번호를 출력
select last_name, department_id
from employees
where employee_id = 176

예제 ) 연봉이 150000 에서 200000 범위 이외인 사원들의 이름 및 연봉 출력
단 연봉은 AnnSal 로 출력
select last_name, salary "AnnSal"
from employees
where salary*12 not between 150000 and 200000

예제 ) 2003/01/01 부터 2005/05/30 일 사이에 고용된 사원들의 이름, 사번, 고용일자 출력
고용일자를 역순으로 정렬
select last_name, department_id, hire_date
from employees
where hire_date between '03/01/01' and '05/05/30'
order by hire_date desc

예제 ) 20번 및 50번 부서에서 근무하는 모든 사원들의 이름 및 부서번호를 알파벳 순으로
출력하시오
select last_name, department_id
from employees
where department_id in (20 , 50)
order by last_name asc

예제 ) 20번 및 50번 부서에서 근무하며, 연봉이 200,000 ~ 250,000 사이인 사원들의
이름 및 연봉을 출력하시오
select last_name, salary*12
from employees
where department_id in (20, 50)
and salary*12 between 200000 and 250000

예제 ) 2006년도에 고용된 모든 사람들의 이름 및 고용일을 출력하시오
select last_name, hire_date
from employees
where hire_date like '06%'

예제 ) 매니저가 없는 사람들의 이름 및 업무를 출력하시오
select last_name, job_id
from employees
where manager_id is null

예제 ) 매니저가 있는 사람들의 이름 및 업무, 매니저번호를 출력하시오
select last_name, job_id, manager_id
from employees
where manager_id is not null

예제 ) 커미션을 받는 모든 사원들의 이름, 연봉 및 커미션 출력
연봉을 역순으로 정렬하고, 연봉은 ANNSAL 로 출력하시오
select last_name, salary*12 as annsal, commission_pct
from employees
where commission_pct is not null
order by salary*12 desc

예제 ) 이름의 네번째 글자가 a 인 사원의 이름을 조회하시오
select last_name
from employees
where last_name like '___a%'

예제 ) 이름에 a 및 e 글자가 모두 있는 사원의 이름을 조회하시오
select last_name
from employees
where last_name like '%a%'
and last_name like '%e%'

예제 ) 급여가 2500, 3500, 7000 이 아니며 직업이 SA_REP 나 ST_CLERK인 사원의
이름과 급여, 직업을 출력하시오
select last_name, salary, job_id
from employees
where salary not in (2500, 3500, 7000)
and job_id in ( 'SA_REP' , 'ST_CLERK' )

예제 ) 30번 부서내의 모든 직업들을 유일한 값으로 출력하시오
90번 부서 또한 포함하고 직업을 오름차순으로 출력하시오
select distinct job_id, department_id
from employees
where department_id in (30, 90)
order by job_id asc

예제 ) 사원의 번호와 이름과 근무하는 부서이름을 출력 
select employee_id, last_name, department_name
from employees, departments               <---------------------- 조인