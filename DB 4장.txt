p. 190

예제 ) 사원의 번호와 이름과 근무하는 부서이름을 출력 
select employee_id, last_name, department_name
from employees, departments               <---------------------- 조인


== >> 107 x 27 의 결과값인 2889	<--------- 카티션 프로덕트

조인 -> 여러개의 테이블에서 데이터를 검색

1. 조인 대상 테이블들을 하나의 가상의 테이블로 합쳐주는 작업진행
2. 행을 하나로 조합할때 무결성이 보장되어야 한다
	- 무결성 보장하기 위해 조건이 필요 ( did = did )
	- 조건 -> 조인조건
3. 조인조건 -> 테이블의 행을 조합(조인)할때 무결성이 보장될 수 있도록
	부여하는 조건
4. 조인이 수행 되었을 시 n-1에 해당하는 조인조건을 반드시 
 Where 절에 명시를 해야한다
5. 조인조건이 생략되거나 잘못 작성되었을시 카티션 프로덕트가 발생

select employee_id, last_name, department_name
from employees, departments
where employees.department_id = departments.department_id

조인 조건 
1. 등가 - 테이블에 데이터가 같을때 PK-FK, =
2. 비등가 - 데이터가 전혀 다를떄, =를 제외한 다른 비교연산
3. 포괄 - 어느 한쪽의 테이블에 데이터가 더 많을때 수행
4. 셀프 - 한개의 테이블을 가지고 조인을 수행


select last_name, department_name, department_id
from employees, departments
where employees.department_id=departments.department_id
==>> department_id 가 두 곳 모두 존재해서 에러발생

==>>	1. n-1 조인조건 where 명시 // n은 테이블의 개수
	2. d_id 똑같은 이름의 컬럼 명시 => 반드시 소유주 table 명시해야함
	3. 독립된 테이블은 명시하지 않아도 됨
	4. 접두어를 alias 로 쓰면 alias 로만 표현해야함 ( 혼용 불가능 )
	5. 조인문장에서 일반 조건을 줄때는 조인 조건에 and를 추가해서 조건을
	추가해야함

=> 개선
select last_name, department_name, employees.department_id ( 2번 )
from employees, departments
where employees.department_id=departments.department_id

=> 개선 ( from 절에서 공백을 사용하여 alias 사용 가능 )
select e.last_name, d.department_name, e.department_id
from employees e , departments d
where e.department_id=d.department_id
 => 접두어를 alias 로 쓰면 alias 로만 표현해야함 ( 혼용 불가능 )



1. 등가조인


예시 )
select employees.employee_id, employees.last_name, employees.department_id,
        departments.department_id, departments.location_id
from employees, departments
where employees.department_id = departments.department_id


예시 )
select last_name, employees.department_id, department_name
from employees, departments
where employees.department_id = departments.department_id
and last_name = 'Matos'


p. 201 -----------------------------------------------------------

* 세 개 이상의 테이블 조인
select e.last_name, d.department_name, l.city
from employees e, departments d, locations l
where e.department_id = d.department_id
and d.location_id = l.location_id

예제 ) 연봉이 150000이상인 사원의 이름과 그 사원이 근무하는 부서가 위치한
도시이름을 출력
select e.last_name, l.city
from employees e, departments d, locations l
where e.department_id = d.department_id
and d.location_id = l.location_id
and e.salary*12 >= 150000


select e.last_name, d.department_id, d.department_name
from employees e, departments d
where e.department_id = d.department_id

==> 106개 ( 널값 빼고 출력됨 )

p.205 ------------------------------------------------------------------------

select e.last_name, d.department_id, d.department_name
from employees e, departments d
where e.department_id = d.department_id(+)

==> 107개 ( 널값도 포함되어 출력됨 )
 => (+) 아우터 ( 포괄 조인 )
	- null 행도 삽입

select e.last_name, d.department_id, d.department_name
from employees e, departments d
where e.department_id(+) = d.department_id

==> 122개 ( 사원이 없는 부서까지 출력됨 )

where e.department_id(+) = d.department_id(+)
=> 오라클에서는 쓸 수 없음


p.202 ---------------------------------------------------------------------------------

비등가 조인 : 두 테이블이 겹치는 테이블이 없을때 사용
	- 많이 사용되지않음


p.207 ----------------------------------------------------------------------------------

자체 조인 - 많이 사용되지않음 ( 추후 내용으로 처리가능 )

회사에 근무하는 사원의 번호와 이름, 그 사원을 관리하는 관리자번호와 관리자이름 출력

select e.employee_id, e.last_name, e.manager_id, m.last_name
from employees e, employees m 	       ===>> 한개의 테이블로 두개의 알리아스
where e.manager_id = m.employee_id

==> m 은 가상의 table ( == 인라인 뷰 라고 부름 )








